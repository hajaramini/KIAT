split(.$cyl) %>%
map(~ggplot(., aes(mpg, wt))
```
mtcars %>%
split(.$cyl) %>%
map(~ggplot(., aes(mpg, wt))
```
mtcars %>%
split(.$cyl) %>%
map(~ggplot(., aes(mpg, wt))
```
mtcars %>%
split(.$cyl) %>%
map(~ggplot(., aes(mpg, wt)) + geom_point())
mtcars %>%
split(.$cyl)
mtcars %>%
split(.$cyl) %>%
map(~ggplot(., aes(mpg, wt)) + geom_point())
library(ggplot2)
plots <- mtcars %>%
split(.$cyl) %>%
map(~ggplot(., aes(mpg, wt)) + geom_point()) # make a plot for each df
names(plots)
stringr::str_c(names(plots), ".pdf")
list(paths, plots)
paths <- stringr::str_c(names(plots), ".pdf")
paths
list(paths, plots)
plots
tempdir()
?tempdir
pwalk(list(paths, plots), ggsave, path = tempdir())
pwalk(list(paths, plots), ggsave, path = "~/Desktop/2017_summer/Rclub-r4ds_Ruijuan.Li/")
iris %>%
keep(is.factor) %>%
str()
iris %>%
keep(is.factor)
iris %>%
discard(is.factor) %>%
str()
x <- list(1:5, letters, list(10))
x
list(10)
x %>%
some(is_character)
x %>%
every(is_vector)
x %>%
every(is_character())
x %>%
every(is_character())
x %>%
every(is_character)
x <- sample(10)
x
sample(10)
?sample
sample(size = 100)
sample(100)
sample(x = 100, size = 100)
sample(1)
sample(2)
sample(3)
sample(4)
sample(5)
sample(6)
sample(7)
sample(7, x = 1)
sample(7)
sample(8)
sample(9)
sample(10)
sample(11)
sample(12)
sample(13)
sample(100)
x %>%
detect(~ . > 5)
set.seed(1)
x <- sample(10) # sample 100 numbers from 1-100 with no replacement
x
x %>%
detect(~ . > 5)
x %>%
detect_index(~ . > 5)
x %>%
head_while(~ . > 5)
x %>%
tail_while(~ . > 5)
x
x %>%
head_while(~ . > 5)
x %>%
tail_while(~ . > 5)
x %>%
head_while(~ . > 5)
set.seed(2)
x <- sample(10) # sample 100 numbers from 1-100 with no replacement
x
x %>%
detect(~ . > 5)
x %>%
detect_index(~ . > 5)
x %>%
head_while(~ . > 5)
x %>%
tail_while(~ . > 5)
x
x %>%
head_while(~ . > 1)
dfs <- list(
age = tibble(name = "John", age = 30),
sex = tibble(name = c("John", "Mary"), sex = c("M", "F")),
trt = tibble(name = "Mary", treatment = "A")
)
dfs
dfs %>% reduce(full_join)
vs <- list(
c(1, 3, 5, 6, 10),
c(1, 2, 3, 7, 8, 10),
c(1, 2, 3, 4, 8, 9, 10)
)
vs %>% reduce(intersect)
x <- sample(10)
x
x %>% accumulate(`+`)
x %>%
every(is_vector)
x %>%
every(is_character)
for (i in x){
if(is_character(i)==FALSE){
print "F"
} else {
print "T"
}
}
for (i in x){
if(is_character(i)==FALSE){
print ("F")
} else {
print ("T")
}
}
x
x <- list(1:5, letters, list(10))
x
for (i in x){
if(is_character(i)==FALSE){
print ("F")
} else {
print ("T")
}
}
test <- vector()
for (i in x){
vector[[i]] <- is.character(i)
}
test <- vector()
for (i in x){
vector[i] <- is.character(i)
}
test <- vector()
for (i in x){
test[i] <- is.character(i)
}
test <- vector()
for (i in x){
test[[i]] <- is.character(i)
}
test <- vector()
for (i in x){
test[[i]] <- is_character(i)
}
for (i in x){
test[[i]] <- is_character(x[[i]])
}
x
x %>%
every(is_character)
i = 1
for (i in 1:length(x)){
while(is_character(x[[i]]==FALSE)){
print("FALSE")
else {
print("TRUE")
}
i = i + 1
}
}
i = 1
for (i in 1:length(x)){
while(is_character(x[[i]]==FALSE)){
print("FALSE")
i = i + 1
}
}
x <- list(1:5, letters, list(10))
x %>%
every(is_character)
test <- vector()
i = 1
for (i in 1:length(x)){
while(is_character(x[[i]]==FALSE)){
print("FALSE")
i = i + 1
}
}
x <- list(1:5, letters, list(10))
x %>%
every(is_character)
test <- vector()
i = 1
for (i in 1:length(x)){
while(is_character(x[[i]]==TRUE)){
print("FALSE")
i = i + 1
}
}
x[[1]]
is_character(x[[1]])
for (i in 1:length(x)){
while(is_character(x[[i]]==FALSE)){
print("FALSE")
i = i + 1
}
}
for (i in x){
if(is_character(i)){
print("T")
} else {
print("F")
}
}
i <- 1
while (is_character(x[[i]])==FALSE){
print("F")
i = i+1
}
i <- 1
while (is_character(x[[i]])==FALSE){
print("FALSE")
i = i+1
}
x %>%
every(is_character)
i <- 1
while (is_character(x[[i]])==FALSE){
print("FALSE")
i = i+1
} next {
print("TRUE")
}
i <- 1
while (is_character(x[[i]])==FALSE){
print("FALSE")
i = i+1
} next("TRUE")
i <- 1
while (is_character(x[[i]])==FALSE){
print("FALSE")
i = i+1
}
?every
every
i <- 1
for (i in 1:length(x)){
while (is_character(x[[i]])==FALSE){
print("FALSE")
i = i+1
}
}
for (i in 1:length(x)){
while (is_character(x[[i]])==FALSE){
print("FALSE")
i = i+1
}
}
mtcars
every(is.factor)
mtcars %>% every(is.factor)
mtcars %>% every(is.numeric)
mtcars %>% every(is.numeric)
flights %>% every(is.numeric)
flights %>% keep(is.numeric)
flights %>% keep(is.numeric)
flights %>% keep(is.numeric) %>% colSums()
nycflights13::flights %>% keep(is.numeric) %>% colSums()
nycflights13::flights %>% keep(is.numeric) %>% colSums()
nycflights13::flights %>% keep(is.numeric) %>% colSums()
nycflights13::flights %>% keep(is.numeric) %>% colSums(na.rm=T)
?colsum
?colsums
col_sum3 <- function(df, f) {
is_num <- sapply(df, is.numeric)
df_num <- df[, is_num]
sapply(df_num, f)
}
df <- tibble(
x = 1:3,
y = 3:1,
z = c("a", "b", "c")
)
col_sum3(df, mean)
col_sum3(df[1:2], mean)
col_sum3(df[1], mean)
col_sum3(df[0], mean)
nycflights13::flights %>% keep(is.numeric) %>% colSums(na.rm=T)
df <- tibble(
x = 1:3,
y = 3:1,
z = c("a", "b", "c")
)
col_sum3(df, mean)
col_sum3 <- function(df, f) {
is_num <- sapply(df, is.numeric)
df_num <- df[, is_num]
sapply(df_num, f)
}
summary(flights$year)
nycflights13::flights %>% keep(is.numeric) %>% summary()
keep(flights, is.numeric())
keep(flights, is.numeric)
keep(df, is.numeric) %>% summary()
col_sum <- function(df, f){
keep(df, is.numeric) %>% summary()
}
col_sum(flights)
col_sum(flights) %>% length()
col_sum(flights) %>% class()
col_sum(flights) %>% dim()
dim(flights)
col_sum(flights)
keep(flights, is.numeric())
keep(flights, is.numeric) %>% dim()
keep(flights, is.numeric) %>% dim()
col_sum(flights)
keep(flights, is.numeric) %>% class()
keep(flights, is.numeric)
flights %>% dim()
keep(flights, is.numeric) %>% class()
keep(flights, is.numeric) %>% dim()
flights %>% dim()
col_sum(flights)
col_sum(flights) %>% dim()
col_sum(nycflights13::flights)
sapply(flights, is.numeric)
f(flights$year)
col_sum3 <- function(df, f) {
is_num <- sapply(df, is.numeric)
df_num <- df[, is_num]
sapply(df_num, f)
}
df <- tibble(
x = 1:3,
y = 3:1,
z = c("a", "b", "c")
)
col_sum3(df, mean)
col_sum3(df, mean)
col_sum3(df, mean)
df[1:2]
df[1]
df[0]
col_sum3(df[0], mean)
df[0]
df[0] %>% class()
col_sum3(df[1:2], mean)
col_sum3(df[1], mean)
col_sum3(df[0], mean)
col_sum3 <- function(df, f) {
is_num <- sapply(df, is.numeric)
df_num <- df[, is_num]
sapply(df_num, f) # apply f function to each numeric column
}
df <- tibble(
x = 1:3,
y = 3:1,
z = c("a", "b", "c")
)
col_sum3(df, mean)
col_sum3(df[1:2], mean)
col_sum3(df[1], mean)
col_sum3(df, mean)
col_sum3(df[0], mean)
col_sum4 <- function(df, f) {
is_num <- sapply(df, is.numeric)
df_num <- df[, is_num]
flatten_dbl(sapply(df_num, f)) # apply f function to each numeric column
}
col_sum4(df, mean)
col_sum4(df, mean)
col_sum4 <- function(df, f) {
df_num <- keep(df, is.numeric)
sapply(df_num, f) # apply f function to each numeric column
}
col_sum4(df, mean)
col_sum4(df[1:2], mean)
col_sum4(df[1], mean)
col_sum4(df[0], mean)
col_sum4 <- function(df, f) {
df_num <- keep(df, is.numeric)
invoke_map(f, df_num) # apply f function to each numeric column
}
col_sum4(df[0], mean)
col_sum4(df[1], mean)
col_sum3 <- function(df, f) {
is_num <- sapply(df, is.numeric)
df_num <- df[, is_num]
sapply(df_num, f) # apply f function to each numeric column
}
col_sum4 <- function(df, f) {
df_num <- keep(df, is.numeric)
invoke_map(f, df_num) # apply f function to each numeric column
}
df <- tibble(
x = 1:3,
y = 3:1,
z = c("a", "b", "c")
)
col_sum3(df, mean)
col_sum3(df[1:2], mean)
col_sum3(df[1], mean)
col_sum3(df[0], mean)
col_sum4(df, mean)
col_sum3(df, mean)
keep(df, is.numeric)
invoke_map(mean, df_num)
invoke_map(mean, df)
col_sum3(df, mean)
col_sum3(df[1:2], mean)
col_sum3(df[1], mean)
col_sum3(df[0], mean)
col_sum4(df, mean)
col_sum4 <- function(df, f) {
keep(df, is.numeric) %>% invoke_map()
# invoke_map(f, df_num) # apply f function to each numeric column
}
col_sum4(df, mean)
col_sum <- function(df, f){
keep(df, is.numeric) %>% summary()
}
col_sum(nycflights13::flights)
col_sum3 <- function(df, f) {
is_num <- sapply(df, is.numeric)
df_num <- df[, is_num]
sapply(df_num, f) # apply f function to each numeric column
}
df <- tibble(
x = 1:3,
y = 3:1,
z = c("a", "b", "c")
)
col_sum3(df, mean)
col_sum4 <- function(df, f) {
df_num <- keep(df, is.numeric)
map_dbl(df_num, f)
}
col_sum4(df, mean)
col_sum4(df, mean)
col_sum4 <- function(df, f) {
df_num <- keep(df, is.numeric)
map_dbl(df_num, f)
}
col_sum4(df, mean)
col_sum4(df[1:2], mean)
col_sum4(df[1], mean)
col_sum4(df[0], mean)
col_sum4(df, mean) %>% typeof()
col_sum3(df, mean) %>% typeof()
col_sum3(df, mean) %>% typeof()
col_sum4(df[0], mean)
col_sum3 <- function(df, f) {
is_num <- sapply(df, is.numeric)
df_num <- df[, is_num]
sapply(df_num, f) # apply f function to each numeric column
}
col_sum3(df, mean)
col_sum3(df, mean) %>% typeof()
col_sum3(df, mean) %>% class()
col_sum3(df[1:2], mean) %>% class()
col_sum3(df[1], mean) %>% class()
col_sum3(df[0], mean) %>% class()
col_sum4(df[0], mean)
col_sum4(df[0], mean) %>% class()
map(c(-10, 0, 10, 100), function(i) rnorm(n = 10, mean = i))
map(1:5, runif)
map_lgl(mtcars, is.factor)
map(-2:2, rnorm, n = 5) # generate 5 normal number using mean from -2 to 2, output as a list
map_dbl(-2:2, rnorm, n = 5)
map_dbl(-2:2, rnorm, n = 1)
map(mtcars, lm(mpg ~ wt, data = .))
pwalk(list(paths, plots), ggsave, path = "~/Desktop/2017_summer/Rclub-r4ds_Ruijuan.Li/R-club-Sep-12/")
models <- mtcars %>%
split(.$cyl) %>%
map(~lm(mpg ~ wt, data = .))
models <- mtcars %>%
map(~lm(mpg ~ wt, data = .))
map_lgl(mtcars, is.factor) # ??? don't understand the Q.
map_dbl(-2:2, rnorm, n = 1)
map_dbl(-2:2, rnorm, n = 5)
map(-2:2, rnorm, n = 5) # generate 5 normal number using mean from -2 to 2, output as a list
map_dbl(-2:2, rnorm, n = 5)
sim %>%
mutate(sim = invoke_map(f, params, n = 10))
test <-
sim %>%
mutate(sim = invoke_map(f, params, n = 10))
test$sim
every
